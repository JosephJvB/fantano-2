---
import Layout from '../layouts/Layout.astro'
import PlaylistCard from '../components/PlaylistCard.svelte'
import playlistsJson from '../../public/spotify-playlists.json'

const playlists = (
  playlistsJson as unknown as Array<{
    id: string
    name: string
    description: string
    trackIds: string[]
  }>
).map((p) => ({
  ...p,
  year: parseInt(p.name.replace("TONY'S TOP TRACKS ", '')),
}))
playlists.sort((a, z) => z.year - a.year)
---

<Layout title="Tony's Top Tracks">
  <h1>Home</h1>
  <main>
    <p class='instructions'>
      Hi everyone webthony sitetano here. <br />This week we are taking a look
      at one melon's favourite tracks.
    </p>
    <ul role='list' class='link-card-grid'>
      {
        playlists.map((playlist) => (
          <PlaylistCard
            client:only
            playlist={{
              id: playlist.id,
              year: playlist.year,
              numTracks: playlist.trackIds.length,
              liked: false,
            }}
          />
        ))
      }
    </ul>
  </main>
</Layout>

<style>
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    padding: 1.5rem;
    border-radius: 8px;
  }
  .instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-light), 12%);
    color: rgb(var(--accent-light));
    border-radius: 4px;
    padding: 0.3em 0.4em;
  }
  .instructions strong {
    color: rgb(var(--accent-light));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }
</style>
